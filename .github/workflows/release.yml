name: "Prepare Release"
on:
  push:
    branches:
      - "release/[0-9]+.[0-9]+.[0-9]+"
      - "hotfix/[0-9]+.[0-9]+.[0-9]+"    
  create:
    branches:
      - "release/[0-9]+.[0-9]+.[0-9]+"
      - "hotfix/[0-9]+.[0-9]+.[0-9]+"
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.meta.outputs.repo }}
      type: ${{ steps.meta.outputs.type }}
      version: ${{ steps.meta.outputs.version }}
      package_name: ${{ steps.meta.outputs.package_name }}
      zip_file: ${{ steps.meta.outputs.zip_file }}
      tar_file: ${{ steps.meta.outputs.tar_file }}
    steps:
      - name: Extract meta
        id: meta
        shell: bash
        run: |
          REPO=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          RELEASE_VERSION=$(echo "$GITHUB_REF" | awk -F / '{print $4}')
          RELEASE_TYPE=$(echo "$GITHUB_REF" | awk -F / '{print $3}')
          PACKAGE="$REPO-$RELEASE_VERSION"
          echo ::set-output name=repo::"$REPO"
          echo ""set-output name=type::"$RELEASE_TYPE"
          echo ::set-output name=version::"$RELEASE_VERSION"
          echo ::set-output name=package_name::"$PACKAGE"
          echo ::set-output name=zip_file::"$PACKAGE.zip"
          echo ::set-output name=tar_file::"$PACKAGE.tar.gz"
  init:
    name: Start a new release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    if: github.event_name == 'create'
    steps:
      - name: Extract meta
        id: meta
        shell: bash
        run: |
          RELEASE_TYPE=$(echo "$GITHUB_REF" | awk -F / '{print $3}')
          RELEASE_VERSION=$(echo "$GITHUB_REF" | awk -F / '{print $4}')
          echo ::set-output name=type::"$RELEASE_TYPE"
          echo ::set-output name=version::"$RELEASE_VERSION"
          echo ::set-output name=branch::"$RELEASE_TYPE/$RELEASE_VERSION"
      - uses: actions/checkout@v2
      - name: Initialize git config
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
      - name: Bump version in package.json
        run: yarn version --new-version ${{ steps.meta.outputs.version }} --no-git-tag-version
      - name: Commit package.json
        id: make-commit
        run: |
          git add package.json
          git commit --message "Bump to version ${{ steps.meta.outputs.version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      - name: Push new branch
        run: git push origin ${{ steps.meta.outputs.branch }}
      - name: Create Pull Request
        id: pull-request-master
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: ${{ steps.meta.outputs.branch }}
          pr_draft: false
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
  build:
    name: Build release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Extract meta
        id: meta
        shell: bash
        run: |
          REPO=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          RELEASE_VERSION=$(echo "$GITHUB_REF" | awk -F / '{print $4}')
          RELEASE_TYPE=$(echo "$GITHUB_REF" | awk -F / '{print $3}')
          PACKAGE="$REPO-$RELEASE_VERSION"
          echo ::set-output name=repo::"$REPO"
          echo ::set-output name=type::"$RELEASE_TYPE"
          echo ::set-output name=version::"$RELEASE_VERSION"
          echo ::set-output name=package_name::"$PACKAGE"
          echo ::set-output name=zip_file::"$PACKAGE.zip"
          echo ::set-output name=tar_file::"$PACKAGE.tar.gz"
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache .yarn
        id: cache-yarn
        uses: actions/cache@v2
        with:
          path: .yarn
          key: .yarn
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules
      - run: yarn install --production=false
      - run: yarn build
      - uses: actions/upload-artifact@v2
        id: upload-zip
        with:
          name: ${{ steps.meta.outputs.zip_file }}
          path: ${{ github.workspace }}/release/archive.zip
      - uses: actions/upload-artifact@v2
        id: upload-tar
        with:
          name: ${{ steps.meta.outputs.tar_file }}
          path: ${{ github.workspace }}/release/archive.tar.gz
      - uses: actions/upload-artifact@v2
        id: upload-release
        with:
          name: release
          path: ${{ github.workspace }}/release/